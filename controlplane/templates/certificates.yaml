{{- if and .Values.certificates.ca.generate .Values.certificates.ca.useCertManager }}
---
# Self-signed ClusterIssuer (cluster-wide, reused across releases)
# Root CA - kept secure, rarely used
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: selfsigned-issuer
spec:
  selfSigned: {}
---
# Root CA Certificate - long-lived, secure
# This is the trust anchor, kept isolated
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "durantic.fullname" . }}-root-ca
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "durantic.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": "keep"
    "argocd.argoproj.io/sync-options": "Prune=false"
spec:
  isCA: true
  commonName: {{ printf "%s Root CA" .Values.certificates.ca.commonName | quote }}
  secretName: {{ include "durantic.fullname" . }}-root-ca-secret
  duration: {{ mul .Values.certificates.ca.validity 24 }}h  # Long-lived root
  renewBefore: 720h  # Renew 30 days before expiry
  privateKey:
    algorithm: RSA
    size: 4096
  issuerRef:
    name: selfsigned-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---
# Root CA Issuer - used only to sign intermediate CA
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ include "durantic.fullname" . }}-root-ca-issuer
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "durantic.labels" . | nindent 4 }}
spec:
  ca:
    secretName: {{ include "durantic.fullname" . }}-root-ca-secret
---
# Intermediate CA Certificate - signed by Root CA
# This is what we actually use for day-to-day operations
# Can be revoked without affecting root trust
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "durantic.fullname" . }}-ca
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "durantic.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": "keep"
    "argocd.argoproj.io/sync-options": "Prune=false"
spec:
  isCA: true
  commonName: {{ .Values.certificates.ca.commonName | quote }}
  secretName: {{ include "durantic.fullname" . }}-ca-secret
  duration: 8760h  # 1 year for intermediate CA
  renewBefore: 720h  # Renew 30 days before expiry
  privateKey:
    algorithm: RSA
    size: 4096
  issuerRef:
    name: {{ include "durantic.fullname" . }}-root-ca-issuer
    kind: Issuer
    group: cert-manager.io
---
# Intermediate CA Issuer - used for signing client certificates and server certificates
# This is the issuer applications will use
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ include "durantic.fullname" . }}-ca-issuer
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "durantic.labels" . | nindent 4 }}
spec:
  ca:
    secretName: {{ include "durantic.fullname" . }}-ca-secret
{{- end }}
