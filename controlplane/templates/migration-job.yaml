{{- if .Values.migrations.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "durantic.fullname" . }}-migrate-{{ .Release.Revision }}
  labels:
    {{- include "durantic.labels" . | nindent 4 }}
    app.kubernetes.io/component: migration
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: {{ .Values.migrations.backoffLimit }}
  ttlSecondsAfterFinished: {{ .Values.migrations.ttlSecondsAfterFinished }}
  template:
    metadata:
      labels:
        {{- include "durantic.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: migration
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "durantic.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: OnFailure
      initContainers:
        - name: wait-for-db
          image: busybox:1.36
          command: 
            - sh
            - -c
            - |
              echo "Waiting for PostgreSQL to be ready..."
              until nc -z {{ include "durantic.databaseHost" . }} {{ .Values.django.database.port }}; do
                echo "PostgreSQL is not ready yet. Waiting..."
                sleep 5
              done
              echo "PostgreSQL is ready!"
              # Give it a few more seconds to ensure it's fully initialized
              sleep 10
        {{- if or .Values.redis.enabled (ne .Values.django.redis.host "") }}
        - name: wait-for-redis
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              echo "Waiting for Redis to be ready..."
              until nc -z {{ include "durantic.redisHost" . }} {{ .Values.django.redis.port }}; do
                echo "Redis is not ready yet. Waiting..."
                sleep 5
              done
              echo "Redis is ready!"
        {{- end }}
        {{- if .Values.minio.enabled }}
        - name: wait-for-minio
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              echo "Waiting for MinIO to be ready..."
              until nc -z {{ .Release.Name }}-minio {{ .Values.minio.service.ports.api }}; do
                echo "MinIO is not ready yet. Waiting..."
                sleep 5
              done
              echo "MinIO is ready!"
        {{- end }}
      containers:
        - name: migrate
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: 
            - python
            - manage.py
            - migrate
            - --noinput
          env:
            # Django settings
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "durantic.fullname" . }}
                  key: django-secret-key
            - name: DEBUG
              value: "False"
            - name: ALLOWED_HOSTS
              value: "*"
            
            # Database settings
            - name: DB_HOST
              value: {{ include "durantic.databaseHost" . | quote }}
            - name: DB_PORT
              value: {{ .Values.django.database.port | quote }}
            - name: DB_NAME
              value: {{ .Values.django.database.name | quote }}
            - name: DB_USER
              value: {{ .Values.django.database.user | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.postgresql.enabled }}
                  name: {{ .Release.Name }}-postgresql
                  key: password
                  {{- else if .Values.django.database.existingSecret }}
                  name: {{ .Values.django.database.existingSecret }}
                  key: {{ .Values.django.database.secretKeys.password | default "password" }}
                  {{- else }}
                  name: {{ include "durantic.fullname" . }}
                  key: database-password
                  {{- end }}
            
            # Redis settings (may be needed for cache during migrations)
            - name: REDIS_HOST
              value: {{ include "durantic.redisHost" . | quote }}
            - name: REDIS_PORT
              value: {{ .Values.django.redis.port | quote }}
            - name: REDIS_PASSWORD
              {{- if and (not .Values.redis.enabled) .Values.django.redis.existingSecret (ne .Values.django.redis.existingSecret "") }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.redis.existingSecret }}
                  key: {{ .Values.django.redis.secretKeys.password | default "password" }}
              {{- else if .Values.redis.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-redis
                  key: redis-password
              {{- else if and (not .Values.redis.enabled) (hasKey .Values.django.redis "password") }}
              value: {{ .Values.django.redis.password | quote }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "durantic.fullname" . }}
                  key: redis-password
              {{- end }}
          resources:
            {{- toYaml .Values.migrations.resources | nindent 12 }}
{{- end }}