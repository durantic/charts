{{- if .Values.ingress.enabled -}}
{{- $fullName := include "durantic.fullname" . -}}
{{- $svcPort := .Values.service.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "durantic.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
---
{{- if .Values.grpcIngress.enabled -}}
{{- $fullName := include "durantic.fullname" . -}}
{{- $svcPort := .Values.grpcService.port -}}
{{- if and .Values.grpcIngress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.grpcIngress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.grpcIngress.annotations "kubernetes.io/ingress.class" .Values.grpcIngress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}-grpc
  labels:
    {{- include "durantic.labels" . | nindent 4 }}
    app.kubernetes.io/component: grpc
  {{- with .Values.grpcIngress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.grpcIngress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.grpcIngress.className }}
  {{- end }}
  {{- if .Values.grpcIngress.tls }}
  tls:
    {{- range .Values.grpcIngress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.grpcIngress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}-grpc
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}-grpc
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
---
{{- if and .Values.pxeMtlsIngress.enabled .Values.ingress.enabled -}}
{{- $fullName := include "durantic.fullname" . -}}
{{- $svcPort := .Values.service.httpPort -}}
{{- $className := .Values.ingress.className -}}
{{- $mergedAnnotations := merge .Values.pxeMtlsIngress.annotations .Values.ingress.annotations -}}
{{- $_ := set $mergedAnnotations "nginx.ingress.kubernetes.io/auth-tls-verify-client" "on" -}}
{{- if and .Values.certificates.ca.generate .Values.certificates.ca.useCertManager -}}
{{- $_ := set $mergedAnnotations "nginx.ingress.kubernetes.io/auth-tls-secret" (printf "%s/%s-ca-secret" .Release.Namespace $fullName) -}}
{{- else -}}
{{- $_ := set $mergedAnnotations "nginx.ingress.kubernetes.io/auth-tls-secret" (printf "%s/%s" .Release.Namespace $fullName) -}}
{{- end -}}
{{- $_ := set $mergedAnnotations "nginx.ingress.kubernetes.io/auth-tls-verify-depth" "1" -}}
{{- $_ := set $mergedAnnotations "nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream" "true" -}}
{{- $_ := set $mergedAnnotations "nginx.ingress.kubernetes.io/auth-tls-error-page" (printf "https://%s/pxe-cert-invalid" (index .Values.ingress.hosts 0).host) -}}
{{- $_ := set $mergedAnnotations "nginx.ingress.kubernetes.io/proxy-connect-timeout" "600" -}}
{{- $_ := set $mergedAnnotations "nginx.ingress.kubernetes.io/proxy-send-timeout" "600" -}}
{{- $_ := set $mergedAnnotations "nginx.ingress.kubernetes.io/proxy-read-timeout" "600" -}}
{{- if and $className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey $mergedAnnotations "kubernetes.io/ingress.class") }}
  {{- $_ := set $mergedAnnotations "kubernetes.io/ingress.class" $className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}-pxe-mtls
  labels:
    {{- include "durantic.labels" . | nindent 4 }}
    app.kubernetes.io/component: pxe-mtls
  annotations:
    {{- toYaml $mergedAnnotations | nindent 4 }}
spec:
  {{- if and $className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ $className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- toYaml .Values.ingress.tls | nindent 4 }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          - path: {{ $.Values.pxeMtlsIngress.path }}
            {{- if and $.Values.pxeMtlsIngress.pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ $.Values.pxeMtlsIngress.pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
    {{- end }}
{{- end }}