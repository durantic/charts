# Stage environment values for controlplane
# This file is automatically updated by CI/CD

image:
  repository: ghcr.io/durantic/controlplane
  tag: main
  pullPolicy: Always

replicaCount: 2

django:
  debug: false
  allowedHosts: "api.stage.durantic.dev,controlplane-stage,controlplane-stage.default.svc.cluster.local"
  controlPlaneHost: "api.stage.durantic.dev"
  csrfTrustedOrigins: "https://api.stage.durantic.dev,https://dashboard.stage.durantic.dev"

  # Database configuration - using existing cluster resources
  database:
    host: "postgresql-cluster-rw.default.svc.cluster.local"
    port: "5432"
    name: "durantic"
    user: "durantic"
    # password: set via secret

  # Redis configuration - using existing cluster resources
  redis:
    host: "redis-master.default.svc.cluster.local"
    port: "6379"
    # password: set via secret

  # S3/MinIO configuration
  s3:
    endpointUrl: "http://minio.default.svc.cluster.local:9000"
    region: "us-east-1"
    ipxeBucket: "ipxe-builds"
    osImagesBucket: "os-images"
    useSSL: false
    verify: false
    addressingStyle: "path"
    urlExpireSeconds: "3600"
    # accessKeyId: set via secret
    # secretAccessKey: set via secret

ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
  hosts:
    - host: api.stage.durantic.dev
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: controlplane-stage-tls
      hosts:
        - api.stage.durantic.dev

service:
  type: ClusterIP
  httpPort: 8000

resources:
  requests:
    cpu: 200m
    memory: 512Mi
  limits:
    cpu: 1000m
    memory: 2Gi

autoscaling:
  enabled: false

podDisruptionBudget:
  enabled: false

# Deployment metadata (updated by CI/CD)
deploymentMetadata:
  lastUpdated: ""
  deployedBy: ""
  gitCommit: ""
